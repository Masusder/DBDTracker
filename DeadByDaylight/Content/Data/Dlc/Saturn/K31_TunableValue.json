[
  {
    "Type": "DataTable",
    "Name": "K31_TunableValue",
    "Class": "UScriptClass'DataTable'",
    "Properties": {
      "RowStruct": {
        "ObjectName": "ScriptStruct'TunableValue'",
        "ObjectPath": "/Script/DeadByDaylight"
      }
    },
    "Rows": {
      "========GeneralKiller": {
        "Value": 0.0,
        "Description": ""
      },
      "MaxWalkSpeed": {
        "Value": 460.0,
        "Description": ""
      },
      "CarryingCamperMaxWalkSpeedPercent": {
        "Value": 0.8,
        "Description": ""
      },
      "TerrorRadius": {
        "Value": 3200.0,
        "Description": ""
      },
      "======Power": {
        "Value": 0.0,
        "Description": ""
      },
      "PowerCooldownDuration": {
        "Value": 10.0,
        "Description": "Cooldown used for Placing AND Manually Activating Drones"
      },
      "========Drones": {
        "Value": 0.0,
        "Description": ""
      },
      "DroneCount": {
        "Value": 4.0,
        "Description": ""
      },
      "DroneInitializationTime": {
        "Value": 3.0,
        "Description": ""
      },
      "DroneTimeToRemainedDestroyedDuration": {
        "Value": 10.0,
        "Description": "How long does a drone remain destroyed for until returning to inventory?"
      },
      "DroneRecallingDuration": {
        "Value": 1.0,
        "Description": ""
      },
      "Drone_MaxTimeToHack": {
        "Value": 30.0,
        "Description": "How long does a survivor have before the hacking minigame fails?"
      },
      "========DroneScoutingDetection": {
        "Value": 0.0,
        "Description": ""
      },
      "SliceCount": {
        "Value": 4.0,
        "Description": "How many slices of traces will be done, horizontally in the XY plane"
      },
      "TracesPerSliceCount": {
        "Value": 6.0,
        "Description": "How many traces will be done per slice, vertically in the Z plane"
      },
      "SuccessfulTracesRequiredForLoS": {
        "Value": 2.0,
        "Description": "How many traces need to hit the survivor for the survivor to be considered detected? Ensure this is less than sliceCount times tracesPerSliceCount"
      },
      "BaseDetectionConeYawHalfAngleDegrees": {
        "Value": 1.0,
        "Description": "How wide is the physical laser detection cone? ~0 for a narrow beam, half angle in degrees in XY plane"
      },
      "BaseDetectionConePitchHalfAngleDegrees": {
        "Value": 15.0,
        "Description": "How wide is the physical laser detection cone? ~0 for a narrow beam, half angle in degrees in XZ plane"
      },
      "MaxDistanceXY": {
        "Value": 1000.0,
        "Description": "Active and Scouting Zone Radius. How far survivors will be detected in the XY plane, in cm"
      },
      "MaxDistanceZ": {
        "Value": 40000.0,
        "Description": "Active Zone Half Height. How far survivors will be detected in the Z axis, in cm"
      },
      "MaxDistanceZ_ScoutingLaser": {
        "Value": 250.0,
        "Description": "Scouting Zone Half Height. How far survivors will be detected in the Z axis for the scouting laser, in cm"
      },
      "SphereTraceRadius": {
        "Value": 3.0,
        "Description": "How small a hole can the detector spot survivors through, in cm"
      },
      "=======Inspect": {
        "Value": 0.0,
        "Description": ""
      },
      "DroneTargetMaxAngleFromScreenCenter": {
        "Value": 45.0,
        "Description": ""
      },
      "InspectInputIntervall": {
        "Value": 1.0,
        "Description": ""
      },
      "InspectSecondsToCharge": {
        "Value": 0.5,
        "Description": ""
      },
      "=======Scanner": {
        "Value": 0.0,
        "Description": ""
      },
      "Scanner_Radius": {
        "Value": 3200.0,
        "Description": ""
      },
      "Scanner_LevelHeightThreshold": {
        "Value": 200.0,
        "Description": ""
      },
      "=======ActiveZone": {
        "Value": 0.0,
        "Description": ""
      },
      "ZoneExposure_ChargeRate": {
        "Value": 1.0,
        "Description": "Keep this set to 1, modify the seconds to charge to balance"
      },
      "ZoneExposure_ChargeRateModifierWhenClawTrapped": {
        "Value": 1.0,
        "Description": "How much faster does it charge when trapped? Multiplicative"
      },
      "ZoneExposure_DechargeRate": {
        "Value": 0.333,
        "Description": "The rate at which the status is lost when not inside an active zone, after a delay"
      },
      "ZoneExposure_DechargeDelay": {
        "Value": 10.0,
        "Description": "When exiting an active zone, the effect will start to deplete only after this delay, in seconds"
      },
      "ZoneExposure_SecondsToCharge": {
        "Value": 10.0,
        "Description": "How many seconds to charge, base value"
      },
      "ZoneExposure_FullyLockedOnDuration": {
        "Value": 60.0,
        "Description": "Once Fully Locked On and exposed, how long does the effect last?"
      },
      "KillerUndetectable_Delay": {
        "Value": 2.0,
        "Description": ""
      },
      "KillerUndetectable_LingerDuration": {
        "Value": 2.0,
        "Description": ""
      },
      "ActiveZone_SurvivorDetectedCosmeticCooldown": {
        "Value": 5.0,
        "Description": "The minimum time between SFX for survivors detected by active zones, to prevent spam"
      },
      "=======Placement": {
        "Value": 0.0,
        "Description": ""
      },
      "DronePlacement_XYDistanceFromOtherDrone": {
        "Value": 2200.0,
        "Description": "Drones cannot be placed when within XYcm horizontally AND Zcm vertically of each other"
      },
      "DronePlacement_ZDistanceFromOtherDrone": {
        "Value": 9999999.0,
        "Description": "Drones cannot be placed when within XYcm horizontally AND Zcm vertically of each other"
      },
      "DronePlacement_XYDistanceFromHookSurvivors": {
        "Value": 1600.0,
        "Description": "Drones cannot be placed when within XYcm horizontally AND Zcm vertically of hooked survivors"
      },
      "DronePlacement_ZDistanceFromHookSurvivors": {
        "Value": 9999999.0,
        "Description": "Drones cannot be placed when within XYcm horizontally AND Zcm vertically of hooked survivors"
      },
      "DronePlacement_ClearanceRadiusAroundDrone": {
        "Value": 35.0,
        "Description": ""
      },
      "DronePlacement_MinHeightAboveGround": {
        "Value": 150.0,
        "Description": ""
      },
      "DronePlacement_MaxHeightAboveGround": {
        "Value": 250.0,
        "Description": ""
      },
      "=======ClawTrap": {
        "Value": 0.0,
        "Description": ""
      },
      "ClawTrap_DefaultMaximumBatteryLife": {
        "Value": 45.0,
        "Description": "Max battery life, in seconds. This base value may adjust based on addons"
      },
      "ClawTrap_BatteryStartingChargePercent": {
        "Value": 1.0,
        "Description": "What percentage does a trap start at after hacking a drone? (assumed 100%)"
      },
      "ClawTrap_BatteryRechargeOnFailedRemovalPercent": {
        "Value": 0.25,
        "Description": "What percent does a trap recharge to when the survivor fails to remove it?"
      },
      "ClawTrap_RequiredTimeToRemainStillBeforeInteractingDuration": {
        "Value": 0.3,
        "Description": "How many seconds must a survivor remain still before being able to remove their trap?"
      },
      "=======Movement": {
        "Value": 0.0,
        "Description": ""
      },
      "DroneMovement_RotationRate": {
        "Value": 50.0,
        "Description": ""
      },
      "DroneMovement_UpAndDownTransitionDuration": {
        "Value": 0.6,
        "Description": ""
      },
      "=======Collision": {
        "Value": 0.0,
        "Description": ""
      },
      "SurvivorMaxCollisionTime": {
        "Value": 0.3,
        "Description": ""
      },
      "CollisionUnhackableCooldown": {
        "Value": 1.0,
        "Description": ""
      },
      "======DroneActiveState": {
        "Value": 0.0,
        "Description": ""
      },
      "ActiveState_UnhackableDuration": {
        "Value": 10.0,
        "Description": "When the drone noramlly enters the unhakable state, it will remain unhackable for X seconds"
      },
      "ActiveState_RevertToScoutingMaxDuration": {
        "Value": 20.0,
        "Description": "When active and hackable, with no survivors in zone, revert to scouting after max X seconds"
      },
      "ActiveState_RevertToScoutingMinDuration": {
        "Value": 2.0,
        "Description": "When active and hackable, with no survivors in zone, revert to scouting after min X seconds"
      },
      "ActiveState_RevertToScoutingChargeRate": {
        "Value": 0.0,
        "Description": "When hackable with a survivor in zone, recharge up to max at this rate"
      },
      "ActiveState_RevertToScoutingDechargeRate": {
        "Value": 1.0,
        "Description": "NOTE: keep TO 1 c/s, you probably want to adjust max duration instead. When hackable with no survivor in zone, deplete at this rate."
      },
      "ActiveState_RevertToScoutingDechargeDelay": {
        "Value": 1.0,
        "Description": "When hackable, and after there are no surviors remaining in zone, only start decharging after this buffer"
      }
    }
  }
]